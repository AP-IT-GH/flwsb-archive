[
    {
        "id": "b227e0fee3f5b4d0",
        "type": "tab",
        "label": "weather-station-sis",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "444481b2f8b4208a",
        "type": "mqtt in",
        "z": "b227e0fee3f5b4d0",
        "name": "baavend-mqtt, topic: weatherStation",
        "topic": "weatherStation",
        "qos": "0",
        "datatype": "json",
        "broker": "6bb176ae02eba776",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 200,
        "y": 80,
        "wires": [
            [
                "1aa38e0ae89987cf",
                "804c0682b9eb29e2"
            ]
        ]
    },
    {
        "id": "1aa38e0ae89987cf",
        "type": "debug",
        "z": "b227e0fee3f5b4d0",
        "name": "Debuq MQTT msg",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 120,
        "wires": []
    },
    {
        "id": "9c9dcd373144581e",
        "type": "function",
        "z": "b227e0fee3f5b4d0",
        "name": "Data Formatting",
        "func": "let mqtt = msg.payload[0];\nlet sis = msg.payload[1];\n\nlet source_id = (sis.find(obj => obj.id == mqtt.id))[\"_value\"];\n\nmsg.payload = [\n\t{\n\t\ttemp: mqtt.temperature_C,          // buiten temperatuur, °C, float\n\t\thumidity: mqtt.humidity,           // buiten luchtvochtigheid, %, int\n\t\twind_speed: mqtt.wind_avg_m_s,     // windsnelheid, m/s, float\n\t\twind_gust: mqtt.wind_max_m_s,      // windsnelheid, m/s, float\n\t\twind_direction: mqtt.wind_dir_deg, // windrichting, hoek in graden °, int\n\t\train: mqtt.rain_mm,                // neerslag, mm/10min, float\n\t\ttime: new Date(mqtt.time)\t\t  // timestamp, YYYY-MM-DD hh:mm:ss\n\t},\n\t{\n\t\tsource: source_id\n\t}];\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 420,
        "wires": [
            [
                "f39da89dc495cbd7",
                "70a20184c3e8dcce"
            ]
        ]
    },
    {
        "id": "f39da89dc495cbd7",
        "type": "debug",
        "z": "b227e0fee3f5b4d0",
        "name": "Debug InfluxDb push",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 620,
        "y": 460,
        "wires": []
    },
    {
        "id": "70a20184c3e8dcce",
        "type": "influxdb out",
        "z": "b227e0fee3f5b4d0",
        "influxdb": "f8d7a87b47e3f24c",
        "name": "",
        "measurement": "weather_station",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "ap",
        "bucket": "flwsb",
        "x": 640,
        "y": 420,
        "wires": []
    },
    {
        "id": "7d776f0ca267b117",
        "type": "influxdb in",
        "z": "b227e0fee3f5b4d0",
        "influxdb": "f8d7a87b47e3f24c",
        "name": "",
        "query": "",
        "rawOutput": false,
        "precision": "",
        "retentionPolicy": "",
        "org": "ap",
        "x": 420,
        "y": 240,
        "wires": [
            [
                "86aa701fd2bfa92f",
                "d1c855beceadb3b7"
            ]
        ]
    },
    {
        "id": "530341daaed9075a",
        "type": "function",
        "z": "b227e0fee3f5b4d0",
        "name": "InfluxDb Query",
        "func": "msg.query = `from(bucket: \"sis\")\n  |> range(start: -100y, stop: now()) \n  |> filter(fn: (r) => r[\"_measurement\"] == \"weather-station\") \n  |> filter(fn: (r) => r[\"_field\"] == \"name\")\n  |> aggregateWindow(every: 1y, fn: last, createEmpty: false)\n  |> yield(name: \"last\")`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 240,
        "wires": [
            [
                "7d776f0ca267b117"
            ]
        ]
    },
    {
        "id": "86aa701fd2bfa92f",
        "type": "debug",
        "z": "b227e0fee3f5b4d0",
        "name": "Debug InfluxDb Query result",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 680,
        "y": 280,
        "wires": []
    },
    {
        "id": "d3d6e247cfe87b75",
        "type": "inject",
        "z": "b227e0fee3f5b4d0",
        "name": "Test Trigger",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 150,
        "y": 300,
        "wires": [
            [
                "530341daaed9075a"
            ]
        ]
    },
    {
        "id": "1ffb9ad0cb529c59",
        "type": "join",
        "z": "b227e0fee3f5b4d0",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 190,
        "y": 420,
        "wires": [
            [
                "166339e2edd04e46",
                "9c9dcd373144581e"
            ]
        ]
    },
    {
        "id": "166339e2edd04e46",
        "type": "debug",
        "z": "b227e0fee3f5b4d0",
        "name": "Debug Join result",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 460,
        "wires": []
    },
    {
        "id": "804c0682b9eb29e2",
        "type": "link out",
        "z": "b227e0fee3f5b4d0",
        "name": "[weather-station-sis] MQTT msg out",
        "mode": "link",
        "links": [
            "7be21cbd46c881bc",
            "5cbd5916c1774538"
        ],
        "x": 395,
        "y": 80,
        "wires": []
    },
    {
        "id": "5cbd5916c1774538",
        "type": "link in",
        "z": "b227e0fee3f5b4d0",
        "name": "[weather-station-sis] MQTT msg in Query",
        "links": [
            "804c0682b9eb29e2"
        ],
        "x": 75,
        "y": 240,
        "wires": [
            [
                "530341daaed9075a"
            ]
        ]
    },
    {
        "id": "7be21cbd46c881bc",
        "type": "link in",
        "z": "b227e0fee3f5b4d0",
        "name": "[weather-station-sis] MQTT msg in Join",
        "links": [
            "804c0682b9eb29e2"
        ],
        "x": 75,
        "y": 420,
        "wires": [
            [
                "1ffb9ad0cb529c59"
            ]
        ]
    },
    {
        "id": "d1c855beceadb3b7",
        "type": "link out",
        "z": "b227e0fee3f5b4d0",
        "name": "[weather-station-sis] Query msg out",
        "mode": "link",
        "links": [
            "e1ff895f8cd08df1"
        ],
        "x": 575,
        "y": 240,
        "wires": []
    },
    {
        "id": "e1ff895f8cd08df1",
        "type": "link in",
        "z": "b227e0fee3f5b4d0",
        "name": "[weather-station-sis] Query msg in",
        "links": [
            "d1c855beceadb3b7"
        ],
        "x": 75,
        "y": 460,
        "wires": [
            [
                "1ffb9ad0cb529c59"
            ]
        ]
    },
    {
        "id": "d058d7ddb4e206a9",
        "type": "comment",
        "z": "b227e0fee3f5b4d0",
        "name": "Improvements",
        "info": "Gather MQTT msg's over a certain time range.\nCalculate median, or just keep the last values.\nOnly push once every couple of minutes.\nFixes undefined values.",
        "x": 110,
        "y": 540,
        "wires": []
    },
    {
        "id": "0a0714ec288757d0",
        "type": "comment",
        "z": "b227e0fee3f5b4d0",
        "name": "Step 1. MQTT msg",
        "info": "",
        "x": 130,
        "y": 40,
        "wires": []
    },
    {
        "id": "d46ec1b7759f5b5b",
        "type": "comment",
        "z": "b227e0fee3f5b4d0",
        "name": "Step 2. Query SIS from database",
        "info": "",
        "x": 170,
        "y": 200,
        "wires": []
    },
    {
        "id": "087d40ae4e5dcac1",
        "type": "comment",
        "z": "b227e0fee3f5b4d0",
        "name": "Step 3. Join MQTT and Query result msg's + Data Formatting + Push to database",
        "info": "",
        "x": 320,
        "y": 380,
        "wires": []
    },
    {
        "id": "6bb176ae02eba776",
        "type": "mqtt-broker",
        "name": "baavend-mqtt",
        "broker": "baavend-mqtt",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "5",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "f8d7a87b47e3f24c",
        "type": "influxdb",
        "hostname": "127.0.0.1",
        "port": "8086",
        "protocol": "http",
        "database": "database",
        "name": "baavend-db",
        "usetls": false,
        "tls": "d50d0c9f.31e858",
        "influxdbVersion": "2.0",
        "url": "http://influx:8086",
        "rejectUnauthorized": true
    },
    {
        "id": "d50d0c9f.31e858",
        "type": "tls-config",
        "name": "",
        "cert": "",
        "key": "",
        "ca": "",
        "certname": "",
        "keyname": "",
        "caname": "",
        "servername": "",
        "verifyservercert": false
    }
]